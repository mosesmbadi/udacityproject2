Description: >
  Moses Mbadi nd9991 project 2

Parameters:
  EnvironmentName:
    Description: udacityproject2
    Type: String

Resources:
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Web Servers Security Group
      VpcId:
        Fn::ImportValue:
          !Sub ${EnvironmentName}-VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
  LBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Load Balancer Security Group
      VpcId:
        Fn::ImportValue:
          !Sub ${EnvironmentName}-VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
  S3GetIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
        - PolicyName: S3GetPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 's3:Get*'
                Resource: 'arn:aws:s3:::udacity-nd9991-project2/*'
  S3GetInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: '/'
      Roles:
        - Ref: 'S3GetIAMRole'
  WebServerLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          mv index.html default.html
          echo "It works! Udagram, Udacity" > index.html
      ImageId: ami-052efd3df9dad4825
      IamInstanceProfile: !Ref S3GetInstanceProfile
      SecurityGroups:
      - !Ref WebServerSecurityGroup
      InstanceType: t2.medium
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: '10'
  WebServerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          !Sub ${EnvironmentName}-VPCID
  WebServerGroup: 
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue:
          !Sub ${EnvironmentName}-PRIV-NETS
      LaunchConfigurationName: !Ref WebServerLaunchConfig
      MinSize: '4'
      MaxSize: '4'
      TargetGroupARNs:
      - !Ref WebServerTargetGroup
  WebServerLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue:
          !Sub ${EnvironmentName}-PUB1-SN
      - Fn::ImportValue:
          !Sub ${EnvironmentName}-PUB2-SN
      SecurityGroups:
      - !Ref LBSecurityGroup
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref WebServerTargetGroup
      LoadBalancerArn: !Ref WebServerLB
      Port: '80'
      Protocol: HTTP
  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref 'WebServerTargetGroup'
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref 'Listener'
      Priority: 1

Outputs:
  LoadBalancer:
    Description: DNS for the LB
    Value: 
      !Join [ "", [ "http://", !GetAtt WebServerLB.DNSName ] ]
    Export:
      Name: !Sub "${EnvironmentName}-WEB-LB-DNS"